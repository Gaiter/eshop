version: '3'

services:
  db-logs:
    image: mysql:latest
    container_name: db-logs
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    networks:
      - lo

  microservice:
    container_name: microservice
    image: gaiter1984/microservice:0.0.3-SNAPSHOT
    depends_on:
      - db-logs
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-logs:3306/db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "8100:8090"
    networks:
      - lo

  eshop:
    container_name: eshop
    image: gaiter1984/eshop:0.0.3-SNAPSHOT
    depends_on:
      - db-logs
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-logs:3306/db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "8080:8080"
    networks:
      - lo

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      #ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - lo

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,LISTENER_EXTERNAL://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9093,LISTENER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 2
      KAFKA_CREATE_TOPIC: "event:1:1"
      #ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - lo
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    container_name: kafka-ui
    image: quay.io/cloudhut/kowl:master
    ports:
      - "9090:8080"
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_BROKERS: kafka:9093
    networks:
      - lo
networks:
  lo: